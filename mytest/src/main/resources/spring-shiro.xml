<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd">

 	<!-- 缓存管理器,采用EhCache ,缓存用户登录信息，用户权限信息-->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro.xml"/>
	</bean>
	
	<!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.flows.security.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="shiroEhcacheManager"/>
    </bean>

 	<!-- Realm实现 -->
    <bean id="userRealm" class="com.flows.security.realm.UserRealm">
 		<property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

	<!-- 设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
	    <property name="realm" ref="userRealm"/>  
        <property name="cacheManager" ref="shiroEhcacheManager"/>
	</bean>  
	   
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->  
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <!-- 权限管理器 -->  
	    <property name="securityManager" ref="securityManager"/>
	    <!-- 登录请求地址 -->  
	    <property name="loginUrl" value="/login"/>  
	    <property name="successUrl" value="/admin/main/index"/>  
	    <!-- 用户访问未对其授权的资源时,所显示的连接 -->  
	    <property name="unauthorizedUrl" value="/unauthor.jsp"/>
	    <property name="filters">
			<util:map>
				<entry key="authc" value-ref="captchaFormAuthenticationFilter" />
			</util:map>
		</property> 
	    <!-- Shiro连接约束配置,即过滤链的定义 -->  
	    <!-- value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值 -->  
	    <!-- anon：它对应的过滤器里面是空的,什么都没做-->  
	    <!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->  
	    <property name="filterChainDefinitions">  
	        <value>  
   	        	 /static/**=anon
	             /captcha=anon  
	             /login=authc
	             /logout=logout 
	            /**= user
	        </value>  
	    </property>
	</bean>  
	   
	<!-- 基于Form表单的身份验证过滤器 -->
    <bean id="captchaFormAuthenticationFilter" class="com.flows.security.filter.CaptchaFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="captchaParam" value="captcha"/>
        <property name="loginUrl" value="/login"/>
    </bean>
	   
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
		
</beans> 